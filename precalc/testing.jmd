# Polynomials


Polynomials are a particular class of expressions that are simple
enough to have many properties that can be analyzed. In particular,
the key concepts of calculus: limits, continuity, derivatives, and
integrals are all relatively trivial for polynomial
functions. However, polynomials are flexible enough that they can be
used to approximate a wide variety of functions. Indeed, though we
don't pursue this, we mention that `Julia`'s `ApproxFun` package
exploits this to great advantage.

Here we discuss some vocabulary and basic facts related to polynomials
and show how the add-on `SymPy` package can be used to model
polynomial expressions within `SymPy`.

For our purposes, a *monomial* is simply a non-negative integer power
of $x$ (or some other indeterminate symbol) possibly multiplied by a
scalar constant.  For example, $5x^4$ is a monomial, as are constants,
such as $-2=-2x^0$ and the symbol itself, as $x = x^1$. In general,
one may consider restrictions on where the constants can come from,
and consider more than one symbol, but we won't pursue this here,
restricting ourselves to the case of a single variable and real
coefficients.

A *polynomial* is a sum of monomials. After
combining terms with same powers, a non-zero polynomial may be written uniquely
as:

$$
a_n x^n + a_{n-1}x^{n-1} + \cdots a_1 x + a_0, \quad a_n \neq 0
$$


and $\sin(x)$ inline
